{"version":3,"sources":["components/CheckIn/Card.js","components/CheckIn/CheckInPrompt.js","components/CheckIn/AppointmentNotFound.js","components/CheckIn/AppointmentView.js","components/Map/Spiral.js","components/Map/Map.js","components/CheckIn/CheckIn.js","services/fhir.js","App.js","serviceWorker.js","index.js"],"names":["Card","infoText","react_default","a","createElement","reactstrap_es","buttonText","onAction","className","size","color","onClick","_this$props","this","props","title","actionButtonText","children","body","renderInfoText","renderActionButton","Component","CheckInPrompt","state","id","handleSubmit","e","preventDefault","_this","isLoading","onCheckIn","handleIdChange","event","setState","target","value","CheckIn_Card","onSubmit","bsSize","onChange","type","disabled","index_es","icon","faCircleNotch","spin","AppointmentNotFound","onClose","AppointmentView","patient","lastName","firstName","practitioner","room","onShowDirections","info","appointment","start","toLocaleString","renderPatient","renderTime","renderPractitioner","renderRoom","Spiral","center","trans","transformation","concat","transform","strokeWidth","fill","stroke","d","Map","config","canvas","width","height","viewBox","Map_Spiral","STATUS","CHECK_IN","APPOINTMENT_NOT_FOUND","CHECKED_IN","CHECKED_IN_MAP","CheckIn","_this$STATUS_TO_RENDE","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderCheckIn","_ref","CheckIn_CheckInPrompt","renderAppointmentNotFound","_ref2","CheckIn_AppointmentNotFound","renderAppointment","_ref3","onShowMap","CheckIn_AppointmentView","renderMap","_ref4","components_Map_Map","MapConfig","routeId","STATUS_TO_RENDERER","defineProperty","status","renderer","Error","renderComponent","getPatient","asyncToGenerator","regenerator_default","mark","_callee","parsedId","wrap","_context","prev","next","Number","isNaN","abrupt","stop","_x","apply","arguments","getAppointment","_callee2","_context2","Date","end","practitionerId","roomId","_x2","getPractitioner","_callee3","_context3","_x3","getRoom","_callee4","_context4","_x4","initialState","App","handleCheckIn","sent","handleShowMap","reset","components_CheckIn_CheckIn","assign","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.703f9604.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Card as ReactstrapCard,\n  CardTitle,\n  CardText\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass Card extends Component {\n  renderInfoText(infoText) {\n    if (!infoText) {\n      return null;\n    }\n\n    return <CardText>{infoText}</CardText>;\n  }\n\n  renderActionButton(buttonText, onAction) {\n    if (!buttonText) {\n      return null;\n    }\n\n    return (\n      <Button\n        className=\"mt-1 btn-block\"\n        size=\"lg\"\n        color=\"primary\"\n        onClick={onAction}\n      >\n        {buttonText}\n      </Button>\n    );\n  }\n\n  render() {\n    const {\n      title,\n      infoText,\n      actionButtonText,\n      onAction,\n      children\n    } = this.props;\n    return (\n      <div className=\"check-in-card\">\n        <ReactstrapCard body className=\"text-center\">\n          <CardTitle>{title}</CardTitle>\n          {this.renderInfoText(infoText)}\n          {children}\n          {this.renderActionButton(actionButtonText, onAction)}\n        </ReactstrapCard>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  title: PropTypes.element.isRequired,\n  infoText: PropTypes.element,\n  actionButtonText: PropTypes.string,\n  onAction: PropTypes.func\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Form, FormGroup, Input } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport Card from \"./Card\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\n\nclass CheckInPrompt extends Component {\n  state = { id: \"\" };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { isLoading, onCheckIn } = this.props;\n    if (isLoading) {\n      return;\n    }\n\n    const { id } = this.state;\n    onCheckIn(id);\n  };\n\n  handleIdChange = event => {\n    this.setState({ id: event.target.value });\n  };\n\n  render() {\n    const { id } = this.state;\n    const { isLoading } = this.props;\n    return (\n      <div className=\"check-in\">\n        <Card\n          title={<span>Check-in</span>}\n          infoText={<span>Please type your ID</span>}\n        >\n          <Form onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Input\n                bsSize=\"lg\"\n                value={id}\n                onChange={this.handleIdChange}\n                className=\"text-center\"\n              />\n              <button\n                className=\"btn btn-primary btn-lg mt-1 btn-block\"\n                type=\"submit\"\n                disabled={!id}\n              >\n                {isLoading ? (\n                  <FontAwesomeIcon icon={faCircleNotch} spin />\n                ) : (\n                  \"Check in\"\n                )}\n              </button>\n            </FormGroup>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nCheckInPrompt.propTypes = {\n  onCheckIn: PropTypes.func.isRequired\n};\n\nexport default CheckInPrompt;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"./Card\";\n\nclass AppointmentNotFound extends Component {\n  render() {\n    const { onClose } = this.props;\n    return (\n      <div>\n        <Card\n          title={<span>Appointment was not found</span>}\n          infoText={<span>Please contact the reception.</span>}\n          actionButtonText=\"Close\"\n          onAction={onClose}\n        />\n      </div>\n    );\n  }\n}\n\nAppointmentNotFound.propTypes = {\n  onClose: PropTypes.func.isRequired\n};\n\nexport default AppointmentNotFound;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport Card from \"./Card\";\n\nclass AppointmentView extends Component {\n  renderPatient(patient) {\n    if (!patient) {\n      return null;\n    }\n\n    return (\n      <tr>\n        <td>Customer</td>\n        <td>\n          {patient.lastName}, {patient.firstName}\n        </td>\n        <td />\n      </tr>\n    );\n  }\n\n  renderPractitioner(practitioner) {\n    if (!practitioner) {\n      return null;\n    }\n\n    return (\n      <tr>\n        <td>Practitioner</td>\n        <td>\n          {practitioner.lastName}, {practitioner.firstName}\n        </td>\n        <td />\n      </tr>\n    );\n  }\n\n  renderRoom(room, onShowDirections) {\n    if (!room) {\n      return null;\n    }\n\n    return (\n      <tr>\n        <td>Room</td>\n        <td>\n          {room.id}, {room.info}{\" \"}\n        </td>\n        <td>\n          <Button\n            className=\"\"\n            size=\"sm\"\n            color=\"info\"\n            onClick={onShowDirections}\n          >\n            Show on Map\n          </Button>\n        </td>\n      </tr>\n    );\n  }\n\n  renderTime(appointment) {\n    if (!appointment) {\n      return null;\n    }\n\n    return (\n      <tr>\n        <td>Time</td>\n        <td>{appointment.start.toLocaleString()}</td>\n        <td />\n      </tr>\n    );\n  }\n\n  render() {\n    const {\n      room,\n      practitioner,\n      patient,\n      appointment,\n      onClose,\n      onShowDirections\n    } = this.props;\n    return (\n      <div className=\"appointment-guide\">\n        <Card\n          title={<span>Appointment</span>}\n          actionButtonText=\"Close\"\n          onAction={onClose}\n        >\n          <table className=\"table text-left\">\n            <tbody>\n              {this.renderPatient(patient)}\n              {this.renderTime(appointment)}\n              {this.renderPractitioner(practitioner)}\n              {this.renderRoom(room, onShowDirections)}\n            </tbody>\n          </table>\n        </Card>\n      </div>\n    );\n  }\n}\n\nAppointmentView.propTypes = {\n  appointment: PropTypes.object,\n  patient: PropTypes.object,\n  practitioner: PropTypes.object,\n  room: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  onShowDirections: PropTypes.func.isRequired\n};\n\nexport default AppointmentView;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Spiral extends Component {\n  render() {\n    const { center } = this.props;\n    const trans = [center[0] - 200, center[1] - 200];\n    const transformation = `translate(${trans[0]} ${trans[1]})`;\n    return (\n      <path\n        transform={transformation}\n        strokeWidth=\"2\"\n        fill=\"none\"\n        stroke=\"#007bff\"\n        d=\"M200 200 S 200.5 200 200.9 200.1 201.3 200.3 201.8 200.5 202.1 200.8 202.5 201.1 202.8 201.5 203.1 202 203.3 202.5 203.4 203 203.5 203.6 203.6 204.2 203.5 204.8 203.4 205.4 203.2 206 203 206.7 202.7 207.3 202.3 207.9 201.8 208.5 201.2 209.1 200.6 209.6 199.9 210.1 199.2 210.5 198.3 210.8 197.5 211.1 196.5 211.4 195.6 211.5 194.6 211.6 193.5 211.6 192.4 211.4 191.4 211.2 190.3 210.9 189.2 210.5 188.1 210 187.1 209.4 186 208.7 185 207.9 184.1 207 183.2 206 182.4 204.9 181.6 203.7 181 202.4 180.4 201.1 179.9 199.6 179.5 198.2 179.2 196.6 179.1 195 179.1 193.4 179.2 191.8 179.4 190.1 179.8 188.4 180.3 186.7 180.9 185.1 181.7 183.4 182.6 181.8 183.7 180.3 184.9 178.8 186.2 177.4 187.6 176 189.2 174.8 190.9 173.6 192.7 172.6 194.6 171.7 196.6 170.9 198.7 170.3 200.8 169.8 203 169.5 205.3 169.4 207.6 169.4 209.9 169.6 212.2 169.9 214.5 170.5 216.9 171.2 219.1 172.1 221.4 173.2 223.6 174.5 225.7 175.9 227.7 177.5 229.6 179.3 231.4 181.2 233.1 183.3 234.6 185.6 236 188 237.2 190.5 238.2 193.1 239.1 195.8 239.7 198.6 240.2 201.4 240.4 204.4 240.5 207.3 240.3 210.3 239.9 213.4 239.2 216.4 238.4 219.3 237.3 222.3 236 225.2 234.4 228 232.7 230.7 230.7 233.3 228.5 235.7 226.1 238.1 223.6 240.2 220.8 242.2 217.9 244 214.8 245.7 211.6 247 208.3 248.2 204.9 249.1 201.3 249.8 197.7 250.2 194.1 250.4 190.4 250.3 186.7 249.9 183 249.3 179.3 248.3 175.7 247.1 172.2 245.7 168.7 243.9 165.3 241.9 162.1 239.7 159 237.1 156.1 234.4 153.4 231.4 150.8 228.2 148.5 224.8 146.4 221.2 144.6 217.4 143.1 213.5 141.8 209.5 140.8 205.3 140.1 201.1 139.7 196.8 139.7 192.4 139.9 188 140.5 183.6 141.4 179.2 142.6 174.9 144.2 170.6 146 166.4 148.2 162.4 150.7 158.5 153.5 154.7 156.5 151.2 159.9 147.8 163.5 144.7 167.3 141.8 171.4 139.2 175.7 136.9 180.1 134.9 184.7 133.1 189.5 131.8 194.4 130.7 199.4 130.1 204.4 129.7 209.5 129.8 214.6 130.2 219.7 131 224.8 132.2 229.8 133.7 234.7 135.6 239.4 137.9 244.1 140.5 248.5 143.4 252.8 146.7 256.8 150.4 260.6 154.3 264.1 158.5 267.3 163 270.2 167.7 272.8 172.7 275 177.9 276.8 183.2 278.3 188.7 279.3 194.3 280 200 280.2 205.8 280.1 211.6 279.5 217.4 278.5 223.2 277 228.9 275.2 234.6 272.9 240.1 270.2 245.5 267.2 250.7 263.7 255.6 259.9 260.4 255.7 264.9 251.1 269.1 246.3 272.9 241.2 276.5 235.8 279.7 230.1 282.4 224.2 284.8 218.2 286.8 212 288.3 205.6 289.4 199.2 290.1 192.7 290.2 186.2 289.9 179.7 289.1 173.2 287.9 166.8 286.2 160.5 284 154.3 281.3 148.4 278.2 142.6 274.7 137.1 270.7 131.9 266.3 126.9 261.6 122.3 256.4 118.1 251 114.2 245.2 110.8 239.1 107.8 232.7 105.3 226.1 103.2 219.4 101.6 212.4 100.5 205.4 99.9 198.2 99.8 191 100.3 183.7 101.3 176.5 102.8 169.4 104.8 162.3 107.3 155.4 110.4 148.6 113.9 142.1 117.9 135.7 122.4 129.7 127.3 124 132.7 118.6 138.4 113.6 144.6 109.1 151 104.9 157.8 101.2 164.8 98 172.1 95.3 179.6 93.1 187.3 91.5 195.1 90.4 203 89.9 210.9 89.9 218.9 90.5 226.8 91.7 234.6 93.5 242.3 95.8 249.9 98.7 257.3 102.2 264.4 106.1 271.3 110.6 277.8 115.7 284 121.1 289.8 127.1 295.1 133.4 300.1 140.2 304.5 147.3 308.4 154.8 311.8 162.5 314.7 170.6 316.9 178.8 318.6 187.2 319.7 195.7 320.2 204.3 320 213 319.2 221.6 317.8 230.2 315.7 238.8 313.1 247.1 309.8 255.3 306 263.3 301.5 271 296.5 278.4 291 285.4 284.9 292.1 278.4 298.3 271.4 304 264 309.3 256.2 314 248 318.2 239.6 321.7 230.8 324.7 221.9 327 212.8 328.7 203.5 329.8 194.2 330.2 184.8 329.9 175.4 328.9 166.1 327.2 156.9 324.9 147.9 321.9 139.1 318.3 130.5 314 122.2 309.1 114.3 303.6 106.8 297.5 99.7 290.8 93.1 283.7 87 276.1 81.4 268 76.4 259.5 72.1 250.7 68.3 241.5 65.2 232 62.8 222.4 61.1 212.5 60.1 202.5 59.9 192.4 60.3 182.4 61.5 172.3 63.4 162.3 66 152.4 69.4 142.8 73.4 133.3 78.1 124.2 83.5 115.4 89.5 106.9 96.2 98.9 103.4 91.4 111.1 84.4 119.4 77.9 128.2 72 137.3 66.8 146.9 62.2 156.8 58.3 166.9 55.2 177.3 52.7 187.9 51 198.7 50.1 209.4 49.9 220.3 50.5 231 51.9 241.7 54.1 252.2 57 262.5 60.7 272.6 65.1 282.3 70.3 291.7 76.2 300.6 82.7 309.1 89.9 317 97.7 324.4 106.1 331.2 115 337.4 124.5 342.9 134.3 347.7 144.6 351.7 155.2 355 166.1 357.4 177.2 359.1 188.6 359.1 188.6\"\n      />\n    );\n  }\n}\n\nSpiral.propTypes = {\n  center: PropTypes.array.isRequired\n};\n\nexport default Spiral;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"../CheckIn/Card\";\nimport Spiral from \"./Spiral\";\n\nclass Map extends Component {\n  render() {\n    const { title, config, onClose } = this.props;\n    const { canvas } = config;\n    const { width, height } = canvas;\n    const center = [0.5 * width, 0.5 * height];\n    return (\n      <div className=\"guide\">\n        <Card title={title} actionButtonText=\"Close\" onAction={onClose}>\n          <svg viewBox={`0 0 ${width} ${height}`}>\n            <Spiral center={center} />\n          </svg>\n        </Card>\n      </div>\n    );\n  }\n}\n\nMap.propTypes = {\n  title: PropTypes.element.isRequired,\n  config: PropTypes.object.isRequired,\n  routeId: PropTypes.string.isRequired,\n  onClose: PropTypes.func\n};\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CheckInPrompt from \"./CheckInPrompt\";\nimport AppointmentNotFound from \"./AppointmentNotFound\";\nimport AppointmentView from \"./AppointmentView\";\nimport Map from \"../Map/Map\";\nimport MapConfig from \"../../config/map\";\n\nexport const STATUS = {\n  CHECK_IN: \"CHECK_IN\",\n  APPOINTMENT_NOT_FOUND: \"APPOINTMENT_NOT_FOUND\",\n  CHECKED_IN: \"CHECKED_IN\",\n  CHECKED_IN_MAP: \"CHECKED_IN_MAP\"\n};\n\nclass CheckIn extends Component {\n  constructor() {\n    super();\n\n    this.STATUS_TO_RENDERER = {\n      [STATUS.CHECK_IN]: this.renderCheckIn,\n      [STATUS.APPOINTMENT_NOT_FOUND]: this.renderAppointmentNotFound,\n      [STATUS.CHECKED_IN]: this.renderAppointment,\n      [STATUS.CHECKED_IN_MAP]: this.renderMap\n    };\n  }\n\n  renderCheckIn = ({ isLoading, onCheckIn }) => (\n    <CheckInPrompt isLoading={isLoading} onCheckIn={onCheckIn} />\n  );\n\n  renderAppointmentNotFound = ({ onClose }) => (\n    <AppointmentNotFound onClose={onClose} />\n  );\n\n  renderAppointment = ({\n    appointment,\n    patient,\n    practitioner,\n    room,\n    onClose,\n    onShowMap\n  }) => (\n    <AppointmentView\n      appointment={appointment}\n      patient={patient}\n      practitioner={practitioner}\n      room={room}\n      onClose={onClose}\n      onShowDirections={onShowMap}\n    />\n  );\n\n  renderMap = ({ room, onClose }) => (\n    <Map\n      title={<span>Room {room.id}</span>}\n      config={MapConfig}\n      routeId={room.id}\n      onClose={onClose}\n    />\n  );\n\n  renderComponent(props) {\n    const { status } = props;\n    const renderer = this.STATUS_TO_RENDERER[status];\n    if (!renderer) {\n      throw new Error(`Invalid status ${status}`);\n    }\n\n    return renderer(props);\n  }\n\n  render() {\n    return <div className=\"App\">{this.renderComponent(this.props)}</div>;\n  }\n}\n\nCheckIn.propTypes = {\n  status: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  patient: PropTypes.object,\n  appointment: PropTypes.object,\n  room: PropTypes.object,\n  practitioner: PropTypes.object,\n  onCheckIn: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onShowMap: PropTypes.func.isRequired\n};\n\nexport default CheckIn;\n","export const getPatient = async id => {\n  const parsedId = Number(id);\n  if (isNaN(parsedId)) {\n    return null;\n  }\n\n  return {\n    id: parsedId,\n    firstName: \"Bart\",\n    lastName: \"Simpson\"\n  };\n};\n\nexport const getAppointment = async patient => {\n  if (!patient) {\n    return null;\n  }\n\n  const { id } = patient;\n\n  if (id === 0) {\n    return null;\n  }\n\n  return {\n    id: \"\",\n    start: new Date(),\n    end: new Date() + 10000,\n    practitionerId: \"Dr\",\n    roomId: \"100\"\n  };\n};\n\nexport const getPractitioner = async appointment => {\n  if (!appointment) {\n    return null;\n  }\n\n  return {\n    id: appointment.practitionerId,\n    firstName: \"Homer\",\n    lastName: \"Simpson\"\n  };\n};\n\nexport const getRoom = async appointment => {\n  if (!appointment) {\n    return null;\n  }\n\n  return {\n    id: appointment.roomId,\n    info: \"1st Floor\"\n  };\n};\n","import React, { Component } from \"react\";\nimport CheckIn, { STATUS } from \"./components/CheckIn/CheckIn\";\nimport {\n  getAppointment,\n  getPatient,\n  getPractitioner,\n  getRoom\n} from \"./services/fhir\";\n\nconst initialState = {\n  status: STATUS.CHECK_IN,\n  isLoading: false,\n  patient: null,\n  appointment: null,\n  room: null,\n  practitioner: null\n};\n\nclass App extends Component {\n  state = initialState;\n\n  handleCheckIn = async id => {\n    this.setState({ isLoading: true });\n\n    const patient = await getPatient(id);\n    const appointment = await getAppointment(patient);\n    const practitioner = await getPractitioner(appointment);\n    const room = await getRoom(appointment);\n\n    this.setState({\n      status: appointment ? STATUS.CHECKED_IN : STATUS.APPOINTMENT_NOT_FOUND,\n      patient,\n      appointment,\n      practitioner,\n      room,\n      isLoading: false\n    });\n  };\n\n  handleShowMap = () => {\n    this.setState({ status: STATUS.CHECKED_IN_MAP });\n  };\n\n  reset = () => {\n    this.setState(initialState);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CheckIn\n          {...this.state}\n          onCheckIn={this.handleCheckIn}\n          onClose={this.reset}\n          onShowMap={this.handleShowMap}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}